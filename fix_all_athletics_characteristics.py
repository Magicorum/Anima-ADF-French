#!/usr/bin/env python3
"""
Script pour corriger toutes les caract√©ristiques des comp√©tences athl√©tiques
de mani√®re pr√©cise
"""

import re

def fix_all_athletics_characteristics():
    # Lire le fichier
    with open('templates/actor/features.hbs', 'r', encoding='utf-8') as f:
        content = f.read()

    # Corrections sp√©cifiques pour chaque comp√©tence athl√©tique
    corrections = [
        # Acrobaties : DEX -> AGI
        (r'<span class=\'skill-name\'>Acrobaties</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>Acrobaties</span>\n              <span class=\'skill-base-char physical-char\'>AGI</span>'),
        
        # Athl√©tisme : DEX -> AGI
        (r'<span class=\'skill-name\'>Athl√©tisme</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>Athl√©tisme</span>\n              <span class=\'skill-base-char physical-char\'>AGI</span>'),
        
        # Escalade : DEX -> AGI
        (r'<span class=\'skill-name\'>Escalade</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>Escalade</span>\n              <span class=\'skill-base-char physical-char\'>AGI</span>'),
        
        # Saut : DEX -> FOR
        (r'<span class=\'skill-name\'>Saut</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>Saut</span>\n              <span class=\'skill-base-char physical-char\'>FOR</span>'),
        
        # √âquitation : DEX -> AGI
        (r'<span class=\'skill-name\'>√âquitation</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>√âquitation</span>\n              <span class=\'skill-base-char physical-char\'>AGI</span>'),
        
        # Natation : DEX -> AGI
        (r'<span class=\'skill-name\'>Natation</span>\s*<span class=\'skill-base-char physical-char\'>DEX</span>',
         '<span class=\'skill-name\'>Natation</span>\n              <span class=\'skill-base-char physical-char\'>AGI</span>'),
    ]

    # Appliquer les corrections
    for pattern, replacement in corrections:
        content = re.sub(pattern, replacement, content)

    # Corrections pour les modificateurs
    mod_corrections = [
        # Acrobaties : dexterity.mod -> agility.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.agility.mod}}</span>'),
        
        # Athl√©tisme : dexterity.mod -> agility.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.agility.mod}}</span>'),
        
        # Escalade : dexterity.mod -> agility.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.agility.mod}}</span>'),
        
        # Saut : dexterity.mod -> strength.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.strength.mod}}</span>'),
        
        # √âquitation : dexterity.mod -> agility.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.agility.mod}}</span>'),
        
        # Natation : dexterity.mod -> agility.mod
        (r'<span class=\'skill-char-mod\'>\+{{system\.characteristics\.dexterity\.mod}}</span>',
         '<span class=\'skill-char-mod\'>+{{system.characteristics.agility.mod}}</span>'),
    ]

    # Appliquer les corrections de modificateurs
    for pattern, replacement in mod_corrections:
        content = re.sub(pattern, replacement, content)

    # √âcrire le fichier modifi√©
    with open('templates/actor/features.hbs', 'w', encoding='utf-8') as f:
        f.write(content)

    # Compter les corrections
    agi_count = len(re.findall(r'class=\'skill-base-char physical-char\'>AGI</span>', content))
    for_count = len(re.findall(r'class=\'skill-base-char physical-char\'>FOR</span>', content))
    dex_count = len(re.findall(r'class=\'skill-base-char physical-char\'>DEX</span>', content))
    
    agility_mod_count = len(re.findall(r'characteristics\.agility\.mod', content))
    strength_mod_count = len(re.findall(r'characteristics\.strength\.mod', content))
    dexterity_mod_count = len(re.findall(r'characteristics\.dexterity\.mod', content))

    print(f"‚úÖ Corrig√© toutes les caract√©ristiques des comp√©tences athl√©tiques")
    print(f"üìä Acronymes:")
    print(f"   - AGI: {agi_count}")
    print(f"   - FOR: {for_count}")
    print(f"   - DEX: {dex_count}")
    print(f"üìä Modificateurs:")
    print(f"   - Agilit√©: {agility_mod_count}")
    print(f"   - Force: {strength_mod_count}")
    print(f"   - Dext√©rit√©: {dexterity_mod_count}")

if __name__ == "__main__":
    fix_all_athletics_characteristics()
