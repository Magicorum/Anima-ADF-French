#!/usr/bin/env python3
"""
Script ciblÃ© qui corrige les incohÃ©rences de maniÃ¨re spÃ©cifique
"""

import re

def targeted_characteristic_fix():
    # Lire le fichier
    with open('templates/actor/features.hbs', 'r', encoding='utf-8') as f:
        content = f.read()

    print("ðŸ”§ Correction ciblÃ©e des incohÃ©rences...")

    # Corriger willpower.mod -> will.mod
    content = content.replace('willpower.mod', 'will.mod')

    # Corriger les incohÃ©rences de maniÃ¨re ciblÃ©e
    # FOR avec power.mod -> strength.mod
    content = re.sub(
        r'(<span class=\'skill-base-char[^\']*\'>FOR</span>.*?<span class=\'skill-char-mod\'>\+{{[^}]*power\.mod[^}]*}})',
        lambda m: m.group(1).replace('power.mod', 'strength.mod'),
        content,
        flags=re.DOTALL
    )

    # DEX avec power.mod -> dexterity.mod
    content = re.sub(
        r'(<span class=\'skill-base-char[^\']*\'>DEX</span>.*?<span class=\'skill-char-mod\'>\+{{[^}]*power\.mod[^}]*}})',
        lambda m: m.group(1).replace('power.mod', 'dexterity.mod'),
        content,
        flags=re.DOTALL
    )

    # AGI avec power.mod -> agility.mod
    content = re.sub(
        r'(<span class=\'skill-base-char[^\']*\'>AGI</span>.*?<span class=\'skill-char-mod\'>\+{{[^}]*power\.mod[^}]*}})',
        lambda m: m.group(1).replace('power.mod', 'agility.mod'),
        content,
        flags=re.DOTALL
    )

    # Ã‰crire le fichier modifiÃ©
    with open('templates/actor/features.hbs', 'w', encoding='utf-8') as f:
        f.write(content)

    print("âœ… Corrections ciblÃ©es appliquÃ©es !")
    print("ðŸŽ¯ FOR avec power.mod â†’ strength.mod")
    print("ðŸŽ¯ DEX avec power.mod â†’ dexterity.mod")
    print("ðŸŽ¯ AGI avec power.mod â†’ agility.mod")
    print("ðŸŽ¯ willpower.mod â†’ will.mod")
    print("ðŸŽ‰ Les caractÃ©ristiques devraient maintenant Ãªtre cohÃ©rentes")

if __name__ == "__main__":
    targeted_characteristic_fix()
